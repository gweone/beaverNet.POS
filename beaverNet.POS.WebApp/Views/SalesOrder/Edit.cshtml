@model beaverNet.POS.WebApp.Models.POS.SalesOrder

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Konsultasi</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="SalesOrderId" />
            <div class="form-group">
                <label asp-for="Number" class="control-label"></label>
                <input asp-for="Number" class="form-control" readonly />
                <span asp-validation-for="Number" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CustomerId" class="control-label"></label>
                @await Html.PartialAsync("_Dropdown", new SearchModel()
                {
                    ApiUrl = "/api/Customer",
                    FieldIndex = 0,
                    FieldName = "CustomerId,Email",
                    FieldLabel = "Pelanggan",
                    FieldValue = Model.CustomerId.ToString(),
                    FieldDisplayName = "Name"
                })
            </div>
            <div class="form-group">
                <label asp-for="SalesOrderDate" class="control-label"></label>
                <input asp-for="SalesOrderDate" type="date" class="form-control" readonly />
                <span asp-validation-for="SalesOrderDate" class="text-danger"></span>
            </div>

            @if(ViewData["medicalRecord"] != null)
            { 
                @await Html.PartialAsync("MedicalRecord", ViewData["medicalRecord"])
            }
            else
            {
                <input asp-for="Description" type="hidden" />
            }

            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" /> | <a asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-12 text-right">
        <button class="btn btn-info" onclick="openModal()">ADD</button>
    </div>
    <div class="col-md-12">
        <table class="table" id="gridLine" style="width:100%">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Product</th>
                    <th scope="col">Quantity</th>
                    <th scope="col">Price</th>
                    <th scope="col">SubTotal</th>
                    <th scope="col">Discount</th>
                    <th scope="col">Total</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tfoot>
                <tr>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th></th>
                    <th>
                        <a class="btn btn-success payment d-none" asp-action="Payment" asp-route-id="@Model.SalesOrderId">Lunas</a>
                    </th>
                </tr>
            </tfoot>
        </table>
    </div>
    
</div>

<!--Modal-->
<div class="modal fade" id="modal-dialog">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Sales Order: @Model.Number </h4>
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Product</label>
                            @await Html.PartialAsync("_Dropdown", new SearchModel()
                       {
                           ApiUrl = "/api/Product",
                           FieldIndex = 0,
                           FieldName = "ProductId",
                           FieldLabel = "Product",
                           FieldDisplayName = "Name",
                           OnSelected = "$('#Price').val($(this).data('s')[1])"
                       })
                        </div>
                    </div>
                    <div class="col-md-6">
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Quantity</label>
                            <input class="form-control" id="Quantity" value="0" />
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            <label class="control-label">Price</label>
                            <input class="form-control" id="Price" value="0" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <a href="javascript:;" class="btn btn-white" data-dismiss="modal">Close</a>
                <a href="javascript:;" class="btn btn-success" onclick="saveLine()">Save</a>
            </div>
        </div>
    </div>
</div>
<!--Modal-->


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        $(document).ready(function () {
            initGridLine();
        });

        function initGridLine() {
            var salesOrderId = $("#SalesOrderId").val();

            $("#gridLine").DataTable({
                "ajax": {
                    "type": "GET",
                    "url": "/api/SalesOrderLine/GetLines?salesOrderId=" + salesOrderId +"",
                    "dataSrc": function (data) {
                        if (data.lines.length) {
                            $('.payment').removeClass('d-none');
                        }
                        return data.lines
                    }
                },
                "columns": [
                    { "data": "product.name" },
                    { "data": "quantity" },
                    { "data": "price" },
                    { "data": "subTotal" },
                    { "data": "discount" },
                    { "data": "total" },
                    {
                        "data": "salesOrderLineId",
                        "render": function (data) {
                            var btnDelete = '<button onclick="deleteLine(\''+data+'\')" class="btn btn-danger">DELETE</button>';
                            return btnDelete;
                        }
                    }
                ],
                "language": {
                    "emptyTable": "data is empty."
                },
                "lengthChange": false,
                "bFilter": false,
                "paging": false,
                "info": false,
                "footerCallback": function (row, data, start, end, display) {
                    var api = this.api(), data;

                    // converting to interger to find total
                    var intVal = function (i) {
                        return typeof i === 'string' ?
                            i.replace(/[\$,]/g, '') * 1 :
                            typeof i === 'number' ?
                                i : 0;
                    };

                    // computing column Total of the complete result 
                    var qtyTotal = api
                        .column(1)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    var priceTotal = api
                        .column(2)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    var subTotal = api
                        .column(3)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    var discountTotal = api
                        .column(4)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);

                    var total = api
                        .column(5)
                        .data()
                        .reduce(function (a, b) {
                            return intVal(a) + intVal(b);
                        }, 0);


                    // Update footer by showing the total with the reference of the column index 
                    $(api.column(0).footer()).html('Total');
                    $(api.column(3).footer()).html(subTotal);
                    $(api.column(4).footer()).html(discountTotal);
                    $(api.column(5).footer()).html(total);
                }
            });

            return false;
        }

        function openModal() {

            $("#modal-dialog").modal({
                backdrop: 'static',
                keyboard: false
            });

            return false;
        }

        function closeModal() {
            $('#modal-dialog').modal("hide");
            return false;
        }

        function saveLine() {
            var quantity = $("#Quantity").val();
            var price = $("#Price").val();
            axios.post('/api/SalesOrderLine', {
                "SalesOrderId": $("#SalesOrderId").val(),
                "ProductId": $("[name=ProductId]").val(),
                "Quantity": quantity,
                "Price": price,
                "SubTotal": quantity * price,
                "Discount": 0,
                "Total": quantity * price
            })
            .then(function (response) {
                $("#gridLine").DataTable().ajax.reload();
            })
            .catch(function (error) {

            })
            .then(function () {
                closeModal();
            });


            return false;
        }

        function deleteLine(salesOrderLineId) {

            axios.delete('/api/SalesOrderLine/' + salesOrderLineId)
            .then(function (response) {
                $("#gridLine").DataTable().ajax.reload();
            })
            .catch(function (error) {

            })
            .then(function () {

            });
            return false;
        }

    </script>
}
